{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c73b4c39",
   "metadata": {},
   "source": [
    "# User Input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1875c3f9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:41:47.679340Z",
     "start_time": "2023-03-23T04:41:47.669784Z"
    }
   },
   "outputs": [],
   "source": [
    "a = 'aishmate'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "12472a13",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:41:56.007632Z",
     "start_time": "2023-03-23T04:41:54.393169Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "aish\n"
     ]
    }
   ],
   "source": [
    "a = input()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9eea4525",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:41:58.162242Z",
     "start_time": "2023-03-23T04:41:58.149792Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'aish'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c5bef25f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:40:48.768736Z",
     "start_time": "2023-03-23T04:40:38.343394Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter your age: 65\n"
     ]
    }
   ],
   "source": [
    "age = input(\"enter your age: \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7d128238",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:40:56.658361Z",
     "start_time": "2023-03-23T04:40:56.637297Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'65'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ffb85285",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:42:16.300641Z",
     "start_time": "2023-03-23T04:42:16.292112Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(age)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d1dfc76d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:43:58.900421Z",
     "start_time": "2023-03-23T04:43:56.794905Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the age: 55\n"
     ]
    }
   ],
   "source": [
    "x = int(input('Enter the age: '))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "66690d51",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:44:02.329062Z",
     "start_time": "2023-03-23T04:44:02.317378Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "55"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "868d5e17",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:44:09.418248Z",
     "start_time": "2023-03-23T04:44:09.408448Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6d866ddb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:45:03.316896Z",
     "start_time": "2023-03-23T04:45:00.107730Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Temperature: 25.5\n"
     ]
    }
   ],
   "source": [
    "temp = float(input('Temperature: '))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e46d0203",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:45:08.394114Z",
     "start_time": "2023-03-23T04:45:08.383579Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(temp)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5ad61e8",
   "metadata": {},
   "source": [
    "# Conditional Statements\n",
    "- if\n",
    "- else\n",
    "- elif"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d773bccd",
   "metadata": {},
   "source": [
    "- if"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2e294728",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:55:10.650082Z",
     "start_time": "2023-03-23T04:54:52.088195Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your emailab@gmail.com\n"
     ]
    }
   ],
   "source": [
    "email = 'abc@gmail.com'\n",
    "\n",
    "user = input('Enter your email')\n",
    "\n",
    "if user == email:\n",
    "    print('Access Granted')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b0139f6b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T04:59:23.612750Z",
     "start_time": "2023-03-23T04:59:20.614886Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Player name: virat\n",
      "He is not virat\n"
     ]
    }
   ],
   "source": [
    "#Check whether the player is Virat kolhi\n",
    "\n",
    "name = input('Player name: ')\n",
    "\n",
    "if name == 'Virat Kohli':\n",
    "    print('Success')\n",
    "else:\n",
    "    print('He is not virat')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "02ab90d3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T05:04:18.449155Z",
     "start_time": "2023-03-23T05:04:15.642223Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter any number: 20\n",
      "Number is even\n"
     ]
    }
   ],
   "source": [
    "#Check whether the number is odd or even\n",
    "\n",
    "num = int(input('Enter any number: '))\n",
    "\n",
    "if num%2==0:\n",
    "    print('Number is even')\n",
    "else:\n",
    "    print('Number is odd')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f7b02a40",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T05:08:54.269904Z",
     "start_time": "2023-03-23T05:08:50.536509Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your age: 15\n",
      "Not eligible. You need to wait for more  3 years\n"
     ]
    }
   ],
   "source": [
    "#Write python program which tell whether the person is eligible to do vote.\n",
    "\n",
    "age = int(input('Enter your age: '))\n",
    "\n",
    "if age >= 18:\n",
    "    print('Eligible')\n",
    "else:\n",
    "    print('Not eligible. You need to wait for more ',18-age,'years')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a3b62aa",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-04T05:09:22.046040Z",
     "start_time": "2023-03-04T05:09:22.032172Z"
    }
   },
   "source": [
    "- elif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "8563d6ed",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T05:11:38.862098Z",
     "start_time": "2023-03-23T05:11:36.042600Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter number: -5\n",
      "Number is negative\n"
     ]
    }
   ],
   "source": [
    "#Check whether the number is positive/nero\n",
    "num = int(input('Enter number: '))\n",
    "\n",
    "if num > 0:\n",
    "    print('Number is positive')\n",
    "elif num == 0:\n",
    "    print('Number is zero')\n",
    "else:\n",
    "    print('Number is negative')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f21c4a2f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-03-23T05:14:59.744572Z",
     "start_time": "2023-03-23T05:14:56.247998Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter your marks: 55\n",
      "D\n"
     ]
    }
   ],
   "source": [
    "# Give grades based on percentages\n",
    "#A : marks >85\n",
    "#B : marks < 85 and >70\n",
    "#C : makrs <70 and > 60\n",
    "#D \n",
    "\n",
    "\n",
    "marks = int(input(\"enter your marks: \"))\n",
    "\n",
    "if marks >=85:\n",
    "    print('A')\n",
    "elif (marks<85) and (marks>70):\n",
    "    print('B')\n",
    "elif (marks < 70) and (marks >60):\n",
    "    print('C')\n",
    "else:\n",
    "    print('D')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72b1ca58",
   "metadata": {},
   "source": [
    "# In-Class Exercise:\n",
    "\n",
    "1. Write a program which will print Century if the player has made more than 100 runs else it should write how many more runs he needs to have to complete the century.\n",
    "2. Write a program to check the number is one digited, two digited and three digited.\n",
    "3. Write a program to check whether the user has entered number 99 or not."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
